import React from 'react'
import { m } from 'framer-motion'

const getIcon = (name, color) => {
  switch (name) {
    case 'Logo':
      return (
        <>
          <path
            d="M9.85629 4.85203C9.85629 4.85203 9.49229 6.16803 9.15629 7.09202L7.19629 12.272H12.6003L10.6123 7.09202C10.2763 6.16803 9.94029 4.85203 9.94029 4.85203H9.85629ZM0.196289 20L7.92429 0.400024H11.8443L19.6563 20H15.5683L13.8883 15.632H5.90829L4.25629 20H0.196289Z"
            fill={color}
          />
          <path d="M21.3652 20V0.400024H24.9772V20H21.3652Z" fill={color} />
          <path
            d="M34.4751 8.91202C32.7391 8.91202 31.7311 10.536 31.7311 12.188V20H28.1191V5.88803H31.7311V7.73602C32.2911 6.56002 33.3271 5.88803 34.6991 5.88803H36.8831V8.91202H34.4751Z"
            fill={color}
          />
          <path
            d="M38.8105 20V5.88803H42.4225V20H38.8105ZM38.6985 0.400024H42.5625V3.64802H38.6985V0.400024Z"
            fill={color}
          />
          <path
            d="M50.0444 25.712C46.3484 25.712 44.2764 24.088 44.2764 21.736C44.2764 20.476 44.9764 19.384 45.9844 18.712C45.3124 18.236 44.7804 17.564 44.7804 16.64C44.7804 15.436 45.8724 14.372 47.4964 14.092C46.2364 13.224 45.5924 11.964 45.5924 10.564C45.5924 7.62402 48.0564 5.66402 51.1084 5.66402H52.1444C53.3764 5.66402 54.3284 5.88803 55.9524 5.88803H59.3124V8.35203H56.7644C57.4084 9.10802 57.7164 9.86403 57.7164 10.732C57.7164 13.448 55.1684 15.492 52.2004 15.492H49.3444C48.7284 15.492 48.2524 15.8 48.2524 16.332C48.2524 16.836 48.7004 17.172 49.4564 17.172H54.3284C57.3524 17.172 59.3404 18.852 59.3404 21.26C59.3404 23.948 56.8204 25.712 53.4884 25.712H50.0444ZM53.8244 22.884C55.0564 22.884 55.8124 22.296 55.8124 21.344C55.8124 20.504 55.1124 19.916 53.8804 19.916H49.9044C48.1684 19.916 47.8044 20.756 47.8044 21.4C47.8044 22.24 48.4764 22.884 49.9044 22.884H53.8244ZM52.1164 12.692C53.4324 12.692 54.2444 11.684 54.2444 10.564C54.2444 9.47202 53.4324 8.46402 52.1164 8.46402H51.1644C50.1564 8.46402 49.0364 9.24803 49.0364 10.564C49.0364 11.908 50.1284 12.692 51.1364 12.692H52.1164Z"
            fill={color}
          />
          <path
            d="M61.3964 20V0.400024H65.0084V7.84803C65.7364 6.64402 67.3324 5.66402 68.9844 5.66402H70.3284C73.0164 5.66402 75.3124 7.96003 75.3124 11.068V20H71.7004V11.824C71.7004 10.172 70.7204 8.88403 69.2084 8.88403H68.1444C66.2964 8.88403 65.0084 10.452 65.0084 12.468V20H61.3964Z"
            fill={color}
          />
          <path
            d="M79.5914 2.47202L83.2034 0.960025V5.88803H87.5434V8.91202H83.2034V15.436C83.2034 16.612 83.8474 16.976 84.7994 16.976H87.4314V20H83.7914C81.1594 20 79.5914 18.712 79.5914 15.828V8.91202H76.5674V5.88803H79.5914V2.47202Z"
            fill={color}
          />
          <path
            d="M101.631 20.224C97.7393 20.224 94.7993 17.732 94.6033 14.064H98.4673C98.6633 15.8 99.8953 16.892 101.771 16.892H103.479C104.851 16.892 106.251 16.08 106.251 14.512C106.251 10.76 94.9113 13.252 94.9113 5.80402C94.9113 2.44402 97.9073 0.176025 101.351 0.176025H103.031C106.335 0.176025 109.303 2.19202 109.667 5.83202H105.831C105.579 4.40402 104.571 3.50802 103.031 3.50802H101.351C99.9793 3.50802 98.8593 4.29202 98.8593 5.58002C98.8593 9.47202 110.171 6.67202 110.171 14.316C110.171 17.956 107.231 20.224 103.311 20.224H101.631Z"
            fill={color}
          />
          <path
            d="M114.017 2.47202L117.629 0.960025V5.88803H121.969V8.91202H117.629V15.436C117.629 16.612 118.273 16.976 119.225 16.976H121.857V20H118.217C115.585 20 114.017 18.712 114.017 15.828V8.91202H110.993V5.88803H114.017V2.47202Z"
            fill={color}
          />
          <path
            d="M137.708 5.88803V20H134.096V18.04C133.368 19.244 131.772 20.224 130.12 20.224H128.776C126.088 20.224 123.792 17.928 123.792 14.82V5.88803H127.404V14.064C127.404 15.716 128.384 17.004 129.896 17.004H130.96C132.808 17.004 134.096 15.436 134.096 13.42V5.88803H137.708Z"
            fill={color}
          />
          <path
            d="M146.654 20.224C142.986 20.224 140.102 17.088 140.102 12.944C140.102 8.80002 142.986 5.66402 146.654 5.66402H147.578C148.922 5.66402 150.63 6.47603 151.358 7.48403V0.400024H154.97V20H151.358V18.432C150.49 19.524 148.866 20.224 147.55 20.224H146.654ZM148.194 17.116C150.07 17.116 151.582 15.38 151.582 12.944C151.582 10.508 150.07 8.77203 148.194 8.77203H147.158C145.338 8.77203 143.742 10.508 143.742 12.944C143.742 15.38 145.338 17.116 147.158 17.116H148.194Z"
            fill={color}
          />
          <path
            d="M158.084 20V5.88803H161.696V20H158.084ZM157.972 0.400024H161.836V3.64802H157.972V0.400024Z"
            fill={color}
          />
          <path
            d="M170.942 20.224C167.05 20.224 164.11 17.144 164.11 12.944C164.11 8.71602 167.05 5.66402 170.914 5.66402H172.118C176.01 5.66402 178.922 8.71602 178.922 12.944C178.922 17.172 176.01 20.224 172.146 20.224H170.942ZM172.034 17.116C173.854 17.116 175.282 15.296 175.282 12.944C175.282 10.592 173.854 8.77203 172.034 8.77203H171.026C169.178 8.77203 167.75 10.536 167.75 12.944C167.75 15.352 169.178 17.116 171.026 17.116H172.034Z"
            fill={color}
          />
        </>
      )

    case 'Arrow':
      return (
        <path
          d="M6.31942 8L8.71942 5.52C8.99142 5.232 9.35942 4.912 9.66342 4.624C8.99142 4.64 8.67142 4.64 8.35142 4.64H0.607422V3.36H8.35142C8.67142 3.36 8.97542 3.36 9.66342 3.376C9.35942 3.088 8.99142 2.72 8.70342 2.432L6.31942 0H8.14342L11.8874 4L8.14342 8H6.31942Z"
          fill={color}
        />
      )

    case 'Plus':
      return (
        <path
          d="M6.5 12.5469V6.5M6.5 6.5H12.5469M6.5 6.5V0.453125M6.5 6.5H0.453125"
          stroke={color}
          strokeWidth="1.5"
        />
      )

    case 'Airplane':
      return (
        <path
          d="M0 12.5V0.5L12 6.5L0 12.5ZM1.26316 10.25L8.74737 6.5L1.26316 2.75V5.375L5.05263 6.5L1.26316 7.625V10.25Z"
          fill={color}
        />
      )

    case 'Play':
      return (
        <path
          d="M9 5.5L0.750001 10.2631L0.750001 0.73686L9 5.5Z"
          fill={color}
        />
      )

    case 'Mute':
      return (
        <>
          <rect width="256" height="256" fill="none" />
          <path d="M184,152V104a8,8,0,0,1,16,0v48a8,8,0,0,1-16,0Zm40-72a8,8,0,0,0-8,8v80a8,8,0,0,0,16,0V88A8,8,0,0,0,224,80ZM53.92,34.62A8,8,0,1,0,42.08,45.38L73.55,80H32A16,16,0,0,0,16,96v64a16,16,0,0,0,16,16H77.25l69.84,54.31A8,8,0,0,0,160,224V175.09l42.08,46.29a8,8,0,1,0,11.84-10.76Zm92.16,77.59A8,8,0,0,0,160,106.83V32a8,8,0,0,0-12.91-6.31l-39.85,31a8,8,0,0,0-1,11.7Z" />
        </>
      )

    case 'Volume':
      return (
        <>
          <rect width="256" height="256" fill="none" />
          <path d="M160,32V224a8,8,0,0,1-12.91,6.31L77.25,176H32a16,16,0,0,1-16-16V96A16,16,0,0,1,32,80H77.25l69.84-54.31A8,8,0,0,1,160,32Zm32,64a8,8,0,0,0-8,8v48a8,8,0,0,0,16,0V104A8,8,0,0,0,192,96Zm32-16a8,8,0,0,0-8,8v80a8,8,0,0,0,16,0V88A8,8,0,0,0,224,80Z" />
        </>
      )

    case 'Pause':
      return (
        <>
          <rect
            x="0.849609"
            y="0.601562"
            width="2.1"
            height="9.8"
            fill={color}
          />
          <rect
            x="5.39941"
            y="0.601562"
            width="2.1"
            height="9.8"
            fill={color}
          />
        </>
      )

    case 'ArrowOut':
      return (
        <>
          <rect width="256" height="256" fill="none" />
          <path d="M224,104a8,8,0,0,1-13.66,5.66L184,83.31l-42.34,42.35a8,8,0,0,1-11.32-11.32L172.69,72,146.34,45.66A8,8,0,0,1,152,32h64a8,8,0,0,1,8,8Zm-40,24a8,8,0,0,0-8,8v72H48V80h72a8,8,0,0,0,0-16H48A16,16,0,0,0,32,80V208a16,16,0,0,0,16,16H176a16,16,0,0,0,16-16V136A8,8,0,0,0,184,128Z" />
        </>
      )

    case 'Menu':
      return (
        <>
          <line y1="1" x2="13.7515" y2="1" stroke={color} strokeWidth="2" />
          <line
            y1="6.49963"
            x2="13.7515"
            y2="6.49963"
            stroke={color}
            strokeWidth="2"
          />
          <line
            y1="11.9992"
            x2="13.7515"
            y2="11.9992"
            stroke={color}
            strokeWidth="2"
          />
        </>
      )

    case 'Maximize':
      return (
        <>
          <path
            d="M1.33398 1.33301L6.00065 5.99967M1.33398 1.33301L1.33398 5.99967M1.33398 1.33301L6.00065 1.33301"
            stroke={color}
          />
          <path
            d="M1.33398 14.667L6.00065 10.0003M1.33398 14.667L1.33398 10.0003M1.33398 14.667L6.00065 14.667"
            stroke={color}
          />
          <path
            d="M14.666 1.33301L9.99935 5.99967M14.666 1.33301L14.666 5.99967M14.666 1.33301L9.99935 1.33301"
            stroke={color}
          />
          <path
            d="M14.666 14.667L9.99935 10.0003M14.666 14.667L14.666 10.0003M14.666 14.667L9.99935 14.667"
            stroke={color}
          />
        </>
      )

    case 'Minimize':
      return (
        <>
          <path
            d="M6 6L1.33333 1.33333M6 6L6 1.33333M6 6L1.33333 6"
            stroke={color}
          />
          <path
            d="M6 10L1.33333 14.6667M6 10L6 14.6667M6 10L1.33333 10"
            stroke={color}
          />
          <path
            d="M10 6L14.6667 1.33333M10 6L10 1.33333M10 6L14.6667 6"
            stroke={color}
          />
          <path
            d="M10 10L14.6667 14.6667M10 10L10 14.6667M10 10L14.6667 10"
            stroke={color}
          />
        </>
      )

    default:
      return <path />
  }
}

const getViewBox = (name) => {
  switch (name) {
    case 'Logo':
      return '0 0 179 26'
    case 'Menu':
      return '0 0 14 13'
    case 'Maximize':
      return '0 0 16 16'
    case 'Minimize':
      return '0 0 16 16'
    default:
      return '0 0 100 100'
  }
}

const Icon = ({
  id = '',
  name,
  title,
  color,
  viewBox = getViewBox(name),
  custom,
  ...rest
}) => {
  const accessibleId = `${name
    .replace(/[^A-Z0-9]+/gi, '-')
    .toLowerCase()}-${id}`

  const svgProps = {
    xmlns: 'http://www.w3.org/2000/svg',
    viewBox: viewBox ?? '0 0 100 100',
    'aria-labelledby': accessibleId,
    focusable: 'false',
  }

  const svgTitle = `<title id="${accessibleId}">${title ?? name}</title>`

  if (custom) {
    return (
      <svg
        dangerouslySetInnerHTML={custom ? { __html: svgTitle + custom } : null}
        {...svgProps}
        {...rest}
      />
    )
  }

  return (
    <svg {...svgProps} {...rest}>
      <title id={accessibleId}>{title ?? name}</title>
      {getIcon(name, color)}
    </svg>
  )
}

export default Icon
